//var searchText = '';
class Todo {
  constructor(title, description, isDone){
    this.title = title;
    this.description = description;
    this.isDone = isDone;
  }
}

class TodoList extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      items: [],
      allItems: [
        new Todo ('Todo 1', 'Description 1', false),
        new Todo ('Todo 2', 'Description 2', true),
        new Todo ('Todo 3', 'Description 3', false)
      ]
    };
    
    console.log('in todoList constr: ' + searchText);
    for(let i=0; i < this.state.allItems.length; i++){
      if(searchText == '' || this.state.allItems[i].contains(searchText)) {
        console.log("yes");
          this.state.items.push(this.state.allItems[i]);
      }
      else {
        console.log("no");
      }
    }
  }
  
  addItem = (item => {
    let newItems = this.state.items;
    newItems.push(item);
    this.setState({items: newItems});
  });
  
  deleteItem = (idx => {
    let newItems = this.state.items;
    newItems.splice(idx, 1);
    this.setState({items: newItems});
  });

  render() {
    return (
      <div className="todo-list">
        <ItemsList
          items={this.state.items}
          clickAction={this.deleteItem} />
      </div>
    );
  }
}

class ItemsList extends React.Component {
  render() {
    console.log('item list Props: ');
    console.log(this.props);
    let listItems = this.props.items.map((item, i) => {
      return (
        <li key={i}>
          <div className="text">{item.title}</div>
          <div className="descr">{item.description}</div>
          <input type="checkbox" defaultChecked={item.isDone} 
            onChange={this.handleChangeChk}/>
          <div
            onClick={this.props.clickAction.bind(this, i)}
            className="delete">Delete</div>
        </li>
      );
    });
    return <ul>{listItems}</ul>
  }
}

class App extends React.Component {
  
  render() {
    return (
        <TodoList />
    );
  }
}

class Search extends React.Component {   
   constructor() {
     super();
     console.log('in search constr: ' + this.state);
     this.onSetSearch = this.onSetSearch.bind(this);
     this.state = {search: ''};
   }
  
   onSetSearch() {
    let text = document.querySelector('input').value;
    this.state.search = text;
    searchText = text; 
    console.log('Set state search = ' + searchText);
   }
  

 // _handleKeyPress(e, field) {
 //   if (e.keyCode === 13) {
 //    e.preventDefault();
 //    console.log('press Enter');
 //   } 
 //}
  
  render() {
    return (
      <div>
        <form>
          <input className="inp_search" type="text" name="name" placeholder="..." />
         <button type="button" className="button_search" onClick={this.onSetSearch}>Search</button>
        </form>
      </div>
    );
  }
}

class App1 extends React.Component {
   constructor(props) {
     console.log('constructor App');
     super(props);
     this.onSetSearch = this.onSetSearch.bind(this);
     this.state = {
      searchText: '',
      items: [],
      allItems: [
        new Todo ('Todo 1', 'Description 1', false),
        new Todo ('Todo 2', 'Description 2', true),
        new Todo ('Todo 3', 'Description 3', false)
      ]
    };
    for(let i=0; i < this.state.allItems.length; i++){
    //  if(this.state.searchText == '' || this.state.allItems[i].contains(this.state.searchText))
          this.state.items.push(this.state.allItems[i]);
    }
  }
  addItem = (item => {
    let newItems = this.state.items;
    newItems.push(item);
    this.setState({items: newItems});
  });
  
  deleteItem = (idx => {
    let newItems = this.state.items;
    newItems.splice(idx, 1);
    this.setState({items: newItems});
  });

   onSetSearch() {
     let text = document.querySelector('input').value;
     this.state.searchText = text; 
     console.log('Set state search = ' + this.state.searchText);
     
     //ищем в первоначальном списке
     let newItems = [];
     for(let i = 0; i < this.state.allItems.length; i++) {
       if(this.state.allItems[i].title.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0
         || this.state.allItems[i].description.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0){
        console.log(this.state.allItems[i]);
        newItems.push(this.state.allItems[i]);
       }
     }
     console.log(newItems);
     this.state.items = newItems;
     this.forceUpdate();
   }
  render() {
    return (
      <div className="todo-list">
         <form>
          <input className="inp_search" type="text" name="name" placeholder="..." />
         <button type="button" className="button_search" onClick={this.onSetSearch}>Search</button>
        </form>
        <ItemsList
          items={this.state.items}
          searchText={this.state.searchText}
          clickAction={this.deleteItem} />
      </div>
    );
  }
}
//ReactDOM.render(<Search />, document.getElementById('header'));
ReactDOM.render(<App1 />, document.getElementById('container'));